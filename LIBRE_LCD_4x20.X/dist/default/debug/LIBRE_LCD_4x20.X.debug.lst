

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 25 17:44:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _ADCON1	set	4033
    49  0000                     _PORTDbits	set	3971
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  007E82                     __pcinit:
    55                           	opt callstack 0
    56  007E82                     start_initialization:
    57                           	opt callstack 0
    58  007E82                     __initialization:
    59                           	opt callstack 0
    60  007E82                     end_of_initialization:
    61                           	opt callstack 0
    62  007E82                     __end_of__initialization:
    63                           	opt callstack 0
    64  007E82  0100               	movlb	0
    65  007E84  EF4A  F03F         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68  000001                     __pcstackCOMRAM:
    69                           	opt callstack 0
    70  000001                     set_comando@valor_comando:
    71                           	opt callstack 0
    72                           
    73                           ; 2 bytes @ 0x0
    74  000001                     	ds	2
    75  000003                     ??_set_comando:
    76                           
    77                           ; 1 bytes @ 0x2
    78  000003                     	ds	1
    79  000004                     ??_Lcd_Init:
    80                           
    81                           ; 1 bytes @ 0x3
    82  000004                     	ds	1
    83  000005                     Lcd_Init@repeticiones:
    84                           	opt callstack 0
    85                           
    86                           ; 2 bytes @ 0x4
    87  000005                     	ds	2
    88  000007                     
    89                           ; 1 bytes @ 0x6
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 8 in file "main.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0, cstack
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   109 ;;      Params:         0       0       0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0
   111 ;;      Temps:          0       0       0       0       0       0       0       0       0
   112 ;;      Totals:         0       0       0       0       0       0       0       0       0
   113 ;;Total ram usage:        0 bytes
   114 ;; Hardware stack levels required when called:    2
   115 ;; This function calls:
   116 ;;		_Lcd_Init
   117 ;; This function is called by:
   118 ;;		Startup code after reset
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           	psect	text0
   123  007E94                     __ptext0:
   124                           	opt callstack 0
   125  007E94                     _main:
   126                           	opt callstack 29
   127  007E94                     
   128                           ;main.c: 9:     ADCON1 = 0x0F;
   129  007E94  0E0F               	movlw	15
   130  007E96  6EC1               	movwf	193,c	;volatile
   131  007E98                     
   132                           ;main.c: 10:     Lcd_Init();
   133  007E98  EC7D  F03F         	call	_Lcd_Init	;wreg free
   134  007E9C  EF00  F000         	goto	start
   135  007EA0                     __end_of_main:
   136                           	opt callstack 0
   137                           
   138 ;; *************** function _Lcd_Init *****************
   139 ;; Defined at:
   140 ;;		line 69 in file "./Lcd.h"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;  repeticiones    2    4[COMRAM] int 
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, status,2, status,0, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : 0/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   154 ;;      Params:         0       0       0       0       0       0       0       0       0
   155 ;;      Locals:         2       0       0       0       0       0       0       0       0
   156 ;;      Temps:          1       0       0       0       0       0       0       0       0
   157 ;;      Totals:         3       0       0       0       0       0       0       0       0
   158 ;;Total ram usage:        3 bytes
   159 ;; Hardware stack levels used:    1
   160 ;; Hardware stack levels required when called:    1
   161 ;; This function calls:
   162 ;;		_cargar_comando
   163 ;;		_set_comando
   164 ;; This function is called by:
   165 ;;		_main
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text1
   170  007EFA                     __ptext1:
   171                           	opt callstack 0
   172  007EFA                     _Lcd_Init:
   173                           	opt callstack 29
   174  007EFA                     
   175                           ;./Lcd.h: 72:     PORTDbits.RD4=PORTDbits.RD5=PORTDbits.RD6=PORTDbits.RD7=PORTDbits.RD1=
      +                          PORTDbits.RD0=0;
   176  007EFA  9083               	bcf	131,0,c	;volatile
   177  007EFC  9283               	bcf	131,1,c	;volatile
   178  007EFE  9E83               	bcf	131,7,c	;volatile
   179  007F00  9C83               	bcf	131,6,c	;volatile
   180  007F02  9A83               	bcf	131,5,c	;volatile
   181  007F04  9883               	bcf	131,4,c	;volatile
   182  007F06                     
   183                           ;./Lcd.h: 73:     _delay((unsigned long)((15)*(4000000L/4000.0)));
   184  007F06  0E14               	movlw	20
   185  007F08  6E04               	movwf	??_Lcd_Init^0,c
   186  007F0A  0E7A               	movlw	122
   187  007F0C                     u37:
   188  007F0C  2EE8               	decfsz	wreg,f,c
   189  007F0E  D7FE               	bra	u37
   190  007F10  2E04               	decfsz	??_Lcd_Init^0,f,c
   191  007F12  D7FC               	bra	u37
   192  007F14                     
   193                           ;./Lcd.h: 74:     _delay((unsigned long)((2000)*(4000000L/4000000.0)));
   194  007F14  0E03               	movlw	3
   195  007F16  6E04               	movwf	??_Lcd_Init^0,c
   196  007F18  0E98               	movlw	152
   197  007F1A                     u47:
   198  007F1A  2EE8               	decfsz	wreg,f,c
   199  007F1C  D7FE               	bra	u47
   200  007F1E  2E04               	decfsz	??_Lcd_Init^0,f,c
   201  007F20  D7FC               	bra	u47
   202                           
   203                           ;./Lcd.h: 76:     for(repeticiones=0; repeticiones <3; repeticiones++){
   204  007F22  0E00               	movlw	0
   205  007F24  6E06               	movwf	(Lcd_Init@repeticiones+1)^0,c
   206  007F26  0E00               	movlw	0
   207  007F28  6E05               	movwf	Lcd_Init@repeticiones^0,c
   208  007F2A                     l774:
   209                           
   210                           ;./Lcd.h: 77:         set_comando(3);
   211  007F2A  0E00               	movlw	0
   212  007F2C  6E02               	movwf	(set_comando@valor_comando+1)^0,c
   213  007F2E  0E03               	movlw	3
   214  007F30  6E01               	movwf	set_comando@valor_comando^0,c
   215  007F32  EC50  F03F         	call	_set_comando	;wreg free
   216  007F36                     
   217                           ;./Lcd.h: 78:         cargar_comando();
   218  007F36  EC44  F03F         	call	_cargar_comando	;wreg free
   219  007F3A                     
   220                           ;./Lcd.h: 79:         _delay((unsigned long)((6)*(4000000L/4000.0)));
   221  007F3A  0E08               	movlw	8
   222  007F3C  6E04               	movwf	??_Lcd_Init^0,c
   223  007F3E  0ECA               	movlw	202
   224  007F40                     u57:
   225  007F40  2EE8               	decfsz	wreg,f,c
   226  007F42  D7FE               	bra	u57
   227  007F44  2E04               	decfsz	??_Lcd_Init^0,f,c
   228  007F46  D7FC               	bra	u57
   229  007F48                     
   230                           ;./Lcd.h: 80:     }
   231  007F48  4A05               	infsnz	Lcd_Init@repeticiones^0,f,c
   232  007F4A  2A06               	incf	(Lcd_Init@repeticiones+1)^0,f,c
   233  007F4C  BE06               	btfsc	(Lcd_Init@repeticiones+1)^0,7,c
   234  007F4E  EFB2  F03F         	goto	u21
   235  007F52  5006               	movf	(Lcd_Init@repeticiones+1)^0,w,c
   236  007F54  E109               	bnz	u20
   237  007F56  0E03               	movlw	3
   238  007F58  5C05               	subwf	Lcd_Init@repeticiones^0,w,c
   239  007F5A  A0D8               	btfss	status,0,c
   240  007F5C  EFB2  F03F         	goto	u21
   241  007F60  EFB4  F03F         	goto	u20
   242  007F64                     u21:
   243  007F64  EF95  F03F         	goto	l774
   244  007F68                     u20:
   245  007F68                     
   246                           ;./Lcd.h: 81:     set_comando(2);
   247  007F68  0E00               	movlw	0
   248  007F6A  6E02               	movwf	(set_comando@valor_comando+1)^0,c
   249  007F6C  0E02               	movlw	2
   250  007F6E  6E01               	movwf	set_comando@valor_comando^0,c
   251  007F70  EC50  F03F         	call	_set_comando	;wreg free
   252  007F74                     
   253                           ;./Lcd.h: 82:     cargar_comando();
   254  007F74  EC44  F03F         	call	_cargar_comando	;wreg free
   255  007F78                     
   256                           ;./Lcd.h: 83:     _delay((unsigned long)((6)*(4000000L/4000.0)));
   257  007F78  0E08               	movlw	8
   258  007F7A  6E04               	movwf	??_Lcd_Init^0,c
   259  007F7C  0ECA               	movlw	202
   260  007F7E                     u67:
   261  007F7E  2EE8               	decfsz	wreg,f,c
   262  007F80  D7FE               	bra	u67
   263  007F82  2E04               	decfsz	??_Lcd_Init^0,f,c
   264  007F84  D7FC               	bra	u67
   265  007F86                     
   266                           ;./Lcd.h: 85:     set_comando(2);
   267  007F86  0E00               	movlw	0
   268  007F88  6E02               	movwf	(set_comando@valor_comando+1)^0,c
   269  007F8A  0E02               	movlw	2
   270  007F8C  6E01               	movwf	set_comando@valor_comando^0,c
   271  007F8E  EC50  F03F         	call	_set_comando	;wreg free
   272  007F92                     
   273                           ;./Lcd.h: 86:     cargar_comando();
   274  007F92  EC44  F03F         	call	_cargar_comando	;wreg free
   275                           
   276                           ;./Lcd.h: 87:     _delay((unsigned long)((6)*(4000000L/4000.0)));
   277  007F96  0E08               	movlw	8
   278  007F98  6E04               	movwf	??_Lcd_Init^0,c
   279  007F9A  0ECA               	movlw	202
   280  007F9C                     u77:
   281  007F9C  2EE8               	decfsz	wreg,f,c
   282  007F9E  D7FE               	bra	u77
   283  007FA0  2E04               	decfsz	??_Lcd_Init^0,f,c
   284  007FA2  D7FC               	bra	u77
   285  007FA4                     
   286                           ;./Lcd.h: 89:     set_comando(1);
   287  007FA4  0E00               	movlw	0
   288  007FA6  6E02               	movwf	(set_comando@valor_comando+1)^0,c
   289  007FA8  0E01               	movlw	1
   290  007FAA  6E01               	movwf	set_comando@valor_comando^0,c
   291  007FAC  EC50  F03F         	call	_set_comando	;wreg free
   292  007FB0                     
   293                           ;./Lcd.h: 90:     cargar_comando();
   294  007FB0  EC44  F03F         	call	_cargar_comando	;wreg free
   295  007FB4                     
   296                           ;./Lcd.h: 91:     _delay((unsigned long)((6)*(4000000L/4000.0)));
   297  007FB4  0E08               	movlw	8
   298  007FB6  6E04               	movwf	??_Lcd_Init^0,c
   299  007FB8  0ECA               	movlw	202
   300  007FBA                     u87:
   301  007FBA  2EE8               	decfsz	wreg,f,c
   302  007FBC  D7FE               	bra	u87
   303  007FBE  2E04               	decfsz	??_Lcd_Init^0,f,c
   304  007FC0  D7FC               	bra	u87
   305  007FC2                     
   306                           ;./Lcd.h: 93:     set_comando(0);
   307  007FC2  0E00               	movlw	0
   308  007FC4  6E02               	movwf	(set_comando@valor_comando+1)^0,c
   309  007FC6  0E00               	movlw	0
   310  007FC8  6E01               	movwf	set_comando@valor_comando^0,c
   311  007FCA  EC50  F03F         	call	_set_comando	;wreg free
   312                           
   313                           ;./Lcd.h: 94:     cargar_comando();
   314  007FCE  EC44  F03F         	call	_cargar_comando	;wreg free
   315  007FD2                     
   316                           ;./Lcd.h: 95:     _delay((unsigned long)((6)*(4000000L/4000.0)));
   317  007FD2  0E08               	movlw	8
   318  007FD4  6E04               	movwf	??_Lcd_Init^0,c
   319  007FD6  0ECA               	movlw	202
   320  007FD8                     u97:
   321  007FD8  2EE8               	decfsz	wreg,f,c
   322  007FDA  D7FE               	bra	u97
   323  007FDC  2E04               	decfsz	??_Lcd_Init^0,f,c
   324  007FDE  D7FC               	bra	u97
   325  007FE0                     
   326                           ;./Lcd.h: 97:     set_comando(15);
   327  007FE0  0E00               	movlw	0
   328  007FE2  6E02               	movwf	(set_comando@valor_comando+1)^0,c
   329  007FE4  0E0F               	movlw	15
   330  007FE6  6E01               	movwf	set_comando@valor_comando^0,c
   331  007FE8  EC50  F03F         	call	_set_comando	;wreg free
   332  007FEC                     
   333                           ;./Lcd.h: 98:     cargar_comando();
   334  007FEC  EC44  F03F         	call	_cargar_comando	;wreg free
   335  007FF0                     
   336                           ;./Lcd.h: 99:     _delay((unsigned long)((6)*(4000000L/4000.0)));
   337  007FF0  0E08               	movlw	8
   338  007FF2  6E04               	movwf	??_Lcd_Init^0,c
   339  007FF4  0ECA               	movlw	202
   340  007FF6                     u107:
   341  007FF6  2EE8               	decfsz	wreg,f,c
   342  007FF8  D7FE               	bra	u107
   343  007FFA  2E04               	decfsz	??_Lcd_Init^0,f,c
   344  007FFC  D7FC               	bra	u107
   345  007FFE  0012               	return		;funcret
   346  008000                     __end_of_Lcd_Init:
   347                           	opt callstack 0
   348                           
   349 ;; *************** function _set_comando *****************
   350 ;; Defined at:
   351 ;;		line 56 in file "./Lcd.h"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  valor_comand    2    0[COMRAM] int 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         2       0       0       0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0
   367 ;;      Temps:          1       0       0       0       0       0       0       0       0
   368 ;;      Totals:         3       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        3 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_Lcd_Init
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text2
   379  007EA0                     __ptext2:
   380                           	opt callstack 0
   381  007EA0                     _set_comando:
   382                           	opt callstack 29
   383  007EA0                     
   384                           ;./Lcd.h: 57:      PORTDbits.RD7= (valor_comando & 0b00001000);
   385  007EA0  C001  F003         	movff	set_comando@valor_comando,??_set_comando
   386  007EA4  0E08               	movlw	8
   387  007EA6  1603               	andwf	??_set_comando^0,f,c
   388  007EA8  3203               	rrcf	??_set_comando^0,f,c
   389  007EAA  3203               	rrcf	??_set_comando^0,f,c
   390  007EAC  5083               	movf	131,w,c	;volatile
   391  007EAE  1803               	xorwf	??_set_comando^0,w,c
   392  007EB0  0B7F               	andlw	-129
   393  007EB2  1803               	xorwf	??_set_comando^0,w,c
   394  007EB4  6E83               	movwf	131,c	;volatile
   395                           
   396                           ;./Lcd.h: 58:      PORTDbits.RD6= (valor_comando & 0b00000100);
   397  007EB6  C001  F003         	movff	set_comando@valor_comando,??_set_comando
   398  007EBA  0E04               	movlw	4
   399  007EBC  1603               	andwf	??_set_comando^0,f,c
   400  007EBE  3A03               	swapf	??_set_comando^0,f,c
   401  007EC0  4603               	rlncf	??_set_comando^0,f,c
   402  007EC2  4603               	rlncf	??_set_comando^0,f,c
   403  007EC4  5083               	movf	131,w,c	;volatile
   404  007EC6  1803               	xorwf	??_set_comando^0,w,c
   405  007EC8  0BBF               	andlw	-65
   406  007ECA  1803               	xorwf	??_set_comando^0,w,c
   407  007ECC  6E83               	movwf	131,c	;volatile
   408                           
   409                           ;./Lcd.h: 59:      PORTDbits.RD5= (valor_comando & 0b00000010);
   410  007ECE  C001  F003         	movff	set_comando@valor_comando,??_set_comando
   411  007ED2  0E02               	movlw	2
   412  007ED4  1603               	andwf	??_set_comando^0,f,c
   413  007ED6  3A03               	swapf	??_set_comando^0,f,c
   414  007ED8  4603               	rlncf	??_set_comando^0,f,c
   415  007EDA  5083               	movf	131,w,c	;volatile
   416  007EDC  1803               	xorwf	??_set_comando^0,w,c
   417  007EDE  0BDF               	andlw	-33
   418  007EE0  1803               	xorwf	??_set_comando^0,w,c
   419  007EE2  6E83               	movwf	131,c	;volatile
   420                           
   421                           ;./Lcd.h: 60:      PORTDbits.RD4= (valor_comando & 0b00000001);
   422  007EE4  C001  F003         	movff	set_comando@valor_comando,??_set_comando
   423  007EE8  0E01               	movlw	1
   424  007EEA  1603               	andwf	??_set_comando^0,f,c
   425  007EEC  3A03               	swapf	??_set_comando^0,f,c
   426  007EEE  5083               	movf	131,w,c	;volatile
   427  007EF0  1803               	xorwf	??_set_comando^0,w,c
   428  007EF2  0BEF               	andlw	-17
   429  007EF4  1803               	xorwf	??_set_comando^0,w,c
   430  007EF6  6E83               	movwf	131,c	;volatile
   431  007EF8  0012               	return		;funcret
   432  007EFA                     __end_of_set_comando:
   433                           	opt callstack 0
   434                           
   435 ;; *************** function _cargar_comando *****************
   436 ;; Defined at:
   437 ;;		line 63 in file "./Lcd.h"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   451 ;;      Params:         0       0       0       0       0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_Lcd_Init
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text3
   465  007E88                     __ptext3:
   466                           	opt callstack 0
   467  007E88                     _cargar_comando:
   468                           	opt callstack 29
   469  007E88                     
   470                           ;./Lcd.h: 64:     PORTDbits.RD1=1;
   471  007E88  8283               	bsf	131,1,c	;volatile
   472  007E8A                     
   473                           ;./Lcd.h: 65:      _delay((unsigned long)((300)*(4000000L/4000000.0)));
   474  007E8A  0E64               	movlw	100
   475  007E8C                     u117:
   476  007E8C  2EE8               	decfsz	wreg,f,c
   477  007E8E  D7FE               	bra	u117
   478  007E90                     
   479                           ;./Lcd.h: 66:     PORTDbits.RD1=0;
   480  007E90  9283               	bcf	131,1,c	;volatile
   481  007E92  0012               	return		;funcret
   482  007E94                     __end_of_cargar_comando:
   483                           	opt callstack 0
   484  0000                     
   485                           	psect	rparam
   486  0000                     tosu	equ	0xFFF
   487                           tosh	equ	0xFFE
   488                           tosl	equ	0xFFD
   489                           stkptr	equ	0xFFC
   490                           pclatu	equ	0xFFB
   491                           pclath	equ	0xFFA
   492                           pcl	equ	0xFF9
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           prodh	equ	0xFF4
   498                           prodl	equ	0xFF3
   499                           indf0	equ	0xFEF
   500                           postinc0	equ	0xFEE
   501                           postdec0	equ	0xFED
   502                           preinc0	equ	0xFEC
   503                           plusw0	equ	0xFEB
   504                           fsr0h	equ	0xFEA
   505                           fsr0l	equ	0xFE9
   506                           wreg	equ	0xFE8
   507                           indf1	equ	0xFE7
   508                           postinc1	equ	0xFE6
   509                           postdec1	equ	0xFE5
   510                           preinc1	equ	0xFE4
   511                           plusw1	equ	0xFE3
   512                           fsr1h	equ	0xFE2
   513                           fsr1l	equ	0xFE1
   514                           bsr	equ	0xFE0
   515                           indf2	equ	0xFDF
   516                           postinc2	equ	0xFDE
   517                           postdec2	equ	0xFDD
   518                           preinc2	equ	0xFDC
   519                           plusw2	equ	0xFDB
   520                           fsr2h	equ	0xFDA
   521                           fsr2l	equ	0xFD9
   522                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Lcd_Init
    _Lcd_Init->_set_comando

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     591
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     591
                                              3 COMRAM     3     3      0
                     _cargar_comando
                        _set_comando
 ---------------------------------------------------------------------------------
 (2) _set_comando                                          3     1      2     544
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _cargar_comando                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _cargar_comando
     _set_comando

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 25 17:44:15 2020

                       l9 7EF8                        l12 7E92                        l22 7E9C  
                      l17 7FFE                        u20 7F68                        u21 7F64  
                      u37 7F0C                        u47 7F1A                        u57 7F40  
                      u67 7F7E                        u77 7F9C                        u87 7FBA  
                      u97 7FD8               __CFG_BORV$3 000000              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
                     l700 7E88                       l702 7E8A                       l704 7E90  
                     l800 7FC2                       l802 7FD2                       l810 7E94  
                     l804 7FE0                       l812 7E98                       l806 7FEC  
                     l760 7EA0                       l808 7FF0                       l762 7EFA  
                     l780 7F48                       l764 7EFA                       l790 7F86  
                     l782 7F4C                       l774 7F2A                       l766 7F06  
                     l792 7F92                       l784 7F68                       l776 7F36  
                     l768 7F14                       l794 7FA4                       l786 7F74  
                     l778 7F3A                       l796 7FB0                       l788 7F78  
                     l798 7FB4              __CFG_CPB$OFF 000000                       u107 7FF6  
                     u117 7E8C              __CFG_CPD$OFF 000000              __CFG_BOR$OFF 000000  
                     wreg 000FE8            _cargar_comando 7E88              __CFG_FOSC$HS 000000  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000                      _main 7E94  
                    start 0000             __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000  
            ___param_bank 000000             __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000  
                   ?_main 0001    __end_of_cargar_comando 7E94             __CFG_USBDIV$1 000000  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000                     status 000FD8  
          __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000          __end_of_Lcd_Init 8000  
         __initialization 7E82              __end_of_main 7EA0      Lcd_Init@repeticiones 0005  
                  ??_main 0007             __activetblptr 000000           ?_cargar_comando 0001  
                  _ADCON1 000FC1              ?_set_comando 0001            __CFG_XINST$OFF 000000  
          __CFG_STVREN$ON 000000                __accesstop 0060   __end_of__initialization 7E82  
           ___rparam_used 000001            __pcstackCOMRAM 0001                 ?_Lcd_Init 0001  
              ??_Lcd_Init 0004           __CFG_VREGEN$OFF 000000                   __Hparam 0000  
                 __Lparam 0000      __size_of_set_comando 005A          ??_cargar_comando 0001  
                 __pcinit 7E82                   __ramtop 0800                   __ptext0 7E94  
                 __ptext1 7EFA                   __ptext2 7EA0                   __ptext3 7E88  
    end_of_initialization 7E82                 _PORTDbits 000F83       start_initialization 7E82  
       __size_of_Lcd_Init 0106          __CFG_LPT1OSC$OFF 000000             ??_set_comando 0003  
        __CFG_WDTPS$32768 000000                  _Lcd_Init 7EFA                  __Hrparam 0000  
                __Lrparam 0000       __end_of_set_comando 7EFA   __size_of_cargar_comando 000C  
           __size_of_main 000C     __CFG_CPUDIV$OSC1_PLL2 000000               _set_comando 7EA0  
set_comando@valor_comando 0001  
